from bisect import bisect
from collections import defaultdict
# l = list(map(int,input().split()))
# map(int,input().split()))
from math import gcd,sqrt,ceil,inf
from collections import Counter
import sys
sys.setrecursionlimit(10**9)
def update(i,z,bit):

    # print(i)
    while i<len(bit):
        bit[i]+=z
        i+=i&-i
        # print(i)
def query(i,bit):
    sum = 0

    while i>0:
        sum+=bit[i]
        i-=i&-i

    return sum
hash = defaultdict(int)
n,q = map(int,input().split())

l = list(map(int,input().split()))
c = [0]*(n+1)

for i in range(q):
    l1,r1 = map(int,input().split())
    c[l1]+=1
    if r1+1<len(c):
        c[r1+1]-=1
for i in range(1,n+1):
    c[i]+=c[i-1]

c.sort()
l.sort()
ans = 0
for i in range(1,n+1):
    ans+=l[i-1]*c[i]
print(ans)



