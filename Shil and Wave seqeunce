from collections import defaultdict
from math import sqrt,factorial,gcd,log2
# map(int,input().split())
# l = list(map(int,input().split()))
mod = 10**9 + 7
import sys
sys.setrecursionlimit(10**9)
def update(i,z,bit,posn):

    # print(i)
    while i<len(bit):
        bit[i][posn]+=z
        bit[i][posn]%=mod
        i+=i&-i
        # print(i)
def query(i,bit,posn):
    sum = 0

    while i>0:
        sum+=bit[i][posn]
        sum%=mod
        i-=i&-i

    return sum

def update1(i,z,bit):

    # print(i)
    while i<len(bit):
        bit[i]+=z
        i+=i&-i
        # print(i)
def query1(i,bit):
    sum = 0

    while i>0:
        sum+=bit[i]
        i-=i&-i

    return sum
n = int(input())
l = [0]+list(map(int,input().split()))
dp = []
bit1 = [0]*(10**5+10)
bit2 = []
for i in range(10**5+1):
    ka = [0]*2
    bit2.append(ka)
ans = 0
for i in range(1,n+1):
    f = query(l[i]-1,bit2,1)
    s = query(10**5,bit2,0)-query(l[i],bit2,0)
    s = s%mod
    f+=query1(l[i]-1,bit1)%mod
    s+=query1(10**5,bit1)-query1(l[i],bit1)
    update1(l[i],1,bit1)
    update(l[i],f,bit2,0)
    update(l[i],s,bit2,1)
    ans = ans%mod + f%mod + s%mod
    ans%=mod
print(ans)


