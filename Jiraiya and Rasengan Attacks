from collections import defaultdict
from math import sqrt,factorial,gcd,log2,inf,ceil
# map(int,input().split())
# l = list(map(int,input().split()))
# See jatin_yadavs code for better explaination

mod = 10**9 + 7
import sys

def update(i,z,bit):

    # print(i)
    while i<len(bit):
        # print(i)
        bit[i]+=z
        i+=i&-i
        # print(i)
def query(i,bit):
    sum = 0

    while i>0:
        sum+=bit[i]
        i-=i&-i

    return sum

n = int(input())
l = list(map(int,input().split()))
ret = ((n-1)*n*(n+1)*(n+2))//24
bit1 = [0]*(n+10)
bit2 = [0]*(n+10)
inv = 0
ret1 = 0
for i in range(n):
    z = l[i]

    ret1+=(n-i)*(query(n,bit1)-query(z,bit1))
    inv+=(query(n,bit2)-query(z,bit2))

    update(z,i+1,bit1)
